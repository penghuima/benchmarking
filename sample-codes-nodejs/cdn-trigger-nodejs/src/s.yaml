# ------------------------------------
#   If you need English case, you can refer to [s_en.yaml] file
# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 1.0.0
name: cdn-trigger-app
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "{{ access }}"

vars: # 全局变量
  region: "{{ region }}"
  accountId: "{{ accountId }}"
  service:
    name: "{{ serviceName }}"
    description: 'cdn trigger by serverless devs'
    role: "acs:ram::{{ accountId }}:role/AliyunFCDefaultRole"
  domain: {{ cdnDomain }}
  cdn-trigger-role: "acs:ram::{{ accountId }}:role/aliyuncdneventnotificationrole"
  cdn-sourceArn: "acs:cdn:*:{{ accountId }}"

services:
  cdntrigger: # 业务名称/模块名称
    component:  fc # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    props:
      region: ${vars.region}              # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: "{{ functionName }}"
        description: 'cdn trigger event function by serverless devs'
        runtime: nodejs14
        codeUri: ./code
        handler: index.handler
        memorySize: 128
        timeout: 60
      triggers:
        - name: cdn-trigger-CachedObjectsRefreshed
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CachedObjectsRefreshed
            eventVersion: 1.0.0
            notes: CachedObjectsRefreshed trigger
            filter:
              domain:
                - ${vars.domain} 
        - name: cdn-trigger-CachedObjectsBlocked
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CachedObjectsBlocked
            eventVersion: 1.0.0
            notes: CachedObjectsBlocked trigger
            filter:
              domain:
                - ${vars.domain}
        - name: cdn-trigger-CachedObjectsPushed
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CachedObjectsPushed
            eventVersion: 1.0.0
            notes: CachedObjectsPushed trigger
            filter:
              domain:
                - ${vars.domain}
        - name: cdn-trigger-LogFileCreated
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: LogFileCreated
            eventVersion: 1.0.0
            notes: LogFileCreated trigger
            filter:
              domain:
                - ${vars.domain}
        - name: cdn-trigger-CdnDomainStarted
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CdnDomainStarted
            eventVersion: 1.0.0
            notes: CdnDomainStarted trigger
            filter:
              domain:
                - ${vars.domain}
        - name: cdn-trigger-CdnDomainStopped
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CdnDomainStopped
            eventVersion: 1.0.0
            notes: CdnDomainStopped trigger
            filter:
              domain:
                - ${vars.domain}
        - name: cdn-trigger-CdnDomainAdded
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CdnDomainAdded
            eventVersion: 1.0.0
            notes: CdnDomainAdded trigger
            filter:
              domain:
                - ${vars.domain} # 只有当 ${vars.domain} 被创建时，才会触发
        - name: cdn-trigger-CdnDomainDeleted
          sourceArn: ${vars.cdn-sourceArn}
          type: cdn_events
          role: ${vars.cdn-trigger-role}
          # qualifier: LATEST
          config:
            eventName: CdnDomainDeleted
            eventVersion: 1.0.0
            notes: CdnDomainDeleted trigger
            filter:
              domain:
                - ${vars.domain} # 只有当 ${vars.domain} 被删除时，才会触发
        
        